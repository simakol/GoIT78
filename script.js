//* Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º

// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª —Ç–∞ ¬´Blues¬ª.
//1. –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
//2. –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
//3. –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
//4. –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
//5. –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.

// const genres = ["Jazz", "Blues"];

// genres.push("–†–æ–∫-–Ω-—Ä–æ–ª");

// console.table(genres);

// console.log(genres[0]);

// console.log(genres.length);
// console.log(genres[genres.length - 1]);
// // console.log(genres.shift())
// console.log(genres.splice(0, 1)[0]);

// // genres.unshift("Country", "Reggae");
// genres.splice(0, 0, "Country", "Reggae");

//! ================================================

//* Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞. –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.

// const values = "8 3";
// const valuesArray = values.split(" ");
// const a = Number(valuesArray[0]);
// const b = Number(valuesArray[1]);
// const square = a * b;
// console.log(square);

//! ================================================

//* Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.

// const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];

/*
1: üçé
2: üçá
3: üçë
*/

// for (let i = 0; i < fruits.length; i += 1) {
//   console.log(`${i + 1}: ${fruits[i]}`);
// }

// for (const fruit of fruits) { // –ø–µ—Ä–µ–±–∏—Ä–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è
//   console.log(fruit);
// }

// for (const i in fruits) {
//   // –ø–µ—Ä–µ–±–∏—Ä–∞—î —ñ–Ω–¥–µ–∫—Å–∏ (i - –∑–∞–≤–∂–¥–∏ —Å—Ç—Ä–æ–∫–∞)
//   console.log(`${Number(i) + 1}: ${fruits[i]}`);
// }

//! ================================================

//* Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É. –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.

// const string = "Welcome to the future"; // to the
/*
1. –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ —Ä—è–¥–æ–∫ —É –º–∞—Å–∏–≤ –∑ —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è–º " "
2. –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É —ñ –æ—Å—Ç–∞–Ω–Ω—ñ–π
3. –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –º–∞—Å–∏–≤ –Ω–∞–∑–∞–¥ –¥–æ —Å—Ç—Ä–æ–∫–∏ –∑ —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è–º " "
*/

// const strArray = string.split(" ");
// strArray.shift();
// strArray.pop();
// const newString = strArray.join(" ");

// console.log(newString);

//! ================================================

//* Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.

// const string = "Welcome to the future";
// const reversedStr = string.split("").reverse().join("");
// console.log(reversedStr);

/*
1. —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É, —è–∫–∏–π –±—É–¥–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ñ –Ω–∞–∫–æ–ø–∏—á—É–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è
2. –∑—Ä–æ–±–∏—Ç–∏ —ñ–∑ —Å—Ç—Ä–æ–∫–∏ –º–∞—Å–∏–≤ —ñ –ø–µ—Ä–µ–±—Ä–∞—Ç–∏ –π–æ–≥–æ –∑–∞–¥–æ–º –Ω–∞–ø–µ—Ä–µ–¥
3. –ø—É—à–∏—Ç–∏ –≤ –º–∞—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø–æ—Ç–æ—á–Ω–∏–π —Å–∏–º–≤–æ–ª
4. —Ä–æ–±–∏–º–æ —ñ–∑ –º–∞—Å–∏–≤—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –∑–≤–∏—á–∞–π–Ω—É —Å—Ç—Ä–æ–∫—É
*/

// let newString = [];
// const stringArray = string.split("");

// for (let i = stringArray.length - 1; i >= 0; i -= 1) {
//   newString.push(stringArray[i]);
// }

// newString = newString.join("");

// console.log(newString);

/*
emocleW

1. e -> push(e) -> [e]
2. m -> push(m) -> [e, m]
3. o -> push(o) -> [e, m, o]

*/

//! ================================================

//* Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ–∑ —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é –µ–ª–µ–º–µ–Ω—Ç–∞.

// let temp = langs[1];
// langs[1] = langs[2];
// langs[2] = temp;

// console.log(langs);

/*
1. –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Ü–∏–∫–ª, —è–∫–∏–π –±—É–¥–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç–∏—Å—å –ø–æ –≤—Å—ñ–º –µ–ª–µ–º–µ–Ω—Ç–∞–º(–ø–æ —ñ–Ω–¥–µ–∫—Å–∞–º)
2. –∑–∞–ø—É—Ç–∏—Ç–∏ –≤–∫–ª–∞–¥–µ–Ω–∏–π —Ü–∏–∫–ª, —è–∫–∏–π –±—É–¥–µ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—å –∑ —ñ–Ω–¥–µ–∫—Å—É –Ω–∞ –æ–¥–∏–Ω –±—ñ–ª—å—à–µ –≤—ñ–¥ i
3. –ø–æ—Ä—ñ–≤–Ω—é—î–º–æ –ø–µ—Ä—à—ñ –±—É–∫–≤–∏ —Å—É—Å—ñ–¥–Ω—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    3.1. —è–∫—â–æ –±—É–∫–≤–∞ –∑–ª—ñ–≤–∞ –±—ñ–ª—å—à–∞ –∑–∞ –±—É–∫–≤—É —Å–ø—Ä–∞–≤–∞, —Ç–æ –º—ñ–Ω—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –º—ñ—Å—Ü—è–º–∏
*/
// const langs = ["python", "javascript", "c++", "haskel", "php", "ruby"];

// for (let i = 0; i < langs.length - 1; i += 1) {
//   //   console.log(`El: ${langs[i]} | i: ${i}`);
//   for (let j = i + 1; j < langs.length; j += 1) {
//     // console.log(`\tEl: ${langs[j]} | j: ${j}`);
//     if (langs[i][0] > langs[j][0]) {
//       // langs[i][0] -> "python"[0] -> "p"
//       // langs[j][0] -> "javascript"[0] -> "j"
//       // "p" > "j"
//       let temp = langs[i];
//       langs[i] = langs[j];
//       langs[j] = temp;
//     }
//   }
//   //   console.log("\n");
// }

// console.log(langs);

// console.log(langs.sort());

//! ================================================

//* Example 8 - –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.

// const numbers = [2, 17, 94, 1, 23, 37];
// let min = numbers[0];

// for (const num of numbers) {
//   if (num < min) min = num;
// }

// console.log(min);
